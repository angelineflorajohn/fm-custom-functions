/*
 *  CUSTOM FUNCTION
 *    iterateThroughList ( theList; thisVariableName; iterationVariableName )
 *
 *  DESCRIPTION
 *    To be used in the "Exit Loop If" Script step and will return true or false
 *
 *  PARAMS
 *    list: The variable that contains the list to iterate through
 *    iterationVariableName (optional): The name of the variable to use to count through the list. If nothing passed, will use $i. Clears after last iteration
 *    thisVariableName (optional): The name of the variable to set this current iteration variable to. If nothing passed, will use $thisValue
 *
 *  RETURNS
 *    True or False
 *
 *  DEPENDENCIES
 *    --None--
 *
 *  CHANGELOG
 *    2022-03-28: Paul McCudden: Created
*/

Let (
    [
        thisVariableName = If ( IsEmpty ( thisVariableName ); "$thisValue"; If ( Left ( thisVariableName; 1 ) <> "$"; "$" ) & thisVariableName );
        iterationVariableName = If ( IsEmpty ( iterationVariableName ); "$i"; iterationVariableName );
        
        ~newIteration = Evaluate ( iterationVariableName ) + 1;
		~exitLoop = ~newIteration > ValueCount ( theList );
        ~newIteration = If ( ~exitLoop; ""; ~newIteration );
        ~newVariableValue = If ( ~exitLoop; ""; GetValue ( theList; ~newIteration ) );

       ~letStatement = "Let([" & thisVariableName & "=\"" & ~newVariableValue & "\";" & iterationVariableName & "=\"" & ~newIteration & "\"];" & ~exitLoop & ")"
    ];

    Evaluate ( ~letStatement )

)